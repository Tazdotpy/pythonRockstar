import discord
from discord.ext import commands
import asyncio
import logging

logging.basicConfig(level=logging.INFO)

client = discord.Client()

bot = commands.Bot(command_prefix='>')

@bot.event
async def on_member_join(self, member):
        guild = member.guild
        if guild.system_channel is not None:
            to_send = 'Welcome {0.mention} to {1.name}!'.format(member, guild)
            await guild.system_channel.send(to_send)


@bot.event
async def on_ready():
    print('welcome to bot hell')
    activity = discord.Activity(name='my activity', type=discord.ActivityType.watching)
    await client.change_presence(activity=activity)


@bot.command() # say
async def say(ctx, *, arg):
    await ctx.send(arg)
    await ctx.message.delete()

@bot.command() # HELP
async def help(ctx):
    embed = discord.Embed(title="Help", description="niche bot's command list, all commands are case sensitive, prefix is >:", color=0xeee657)

    embed.add_field(name=">say", value="repeats what you say", inline=False)
    embed.add_field(name=">dm", value="dms an user, accepts both user ID and pings", inline=False)
    embed.add_field(name=">avatar", value="returns an user's avatar, accepts user ID and pings", inline=False)
    embed.add_field(name=">clear", value="clears messages, requires manage messages permission", inline=False)
    embed.add_field(name=">kick", value="kicks a member, requires the kick members permission", inline=False)
    embed.add_field(name=">ban", value="bans a member, requires the ban members permission", inline=False)
    embed.add_field(name=">help", value="returns this message", inline=False)
    embed.add_field(name=">nick", value="changes the nickname of an user, requires manage nicknames permission", inline=False)

    await ctx.send(embed=embed)

@bot.command() # dm
async def dm(ctx, member: discord.Member, *, content):
    channel = await member.create_dm()
    await channel.send(content)
    await ctx.message.delete()

@bot.command() # avatar
async def avatar(ctx, *,  avamember : discord.Member=None):
    userAvatarUrl = avamember.avatar_url
    await ctx.send(userAvatarUrl)

@bot.command() # clear 
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount=100):
    await ctx.channel.purge(limit=amount)

@bot.command() # kick
@commands.has_permissions(kick_members=True)
async def kick(ctx, member : discord.Member, *, reason=None):
    await member.kick(reason=reason)
    await ctx.send('done')

@bot.command() # ban
@commands.has_permissions(ban_members=True)
async def ban(ctx, member : discord.Member, *, reason=None):
    await member.ban(reason=reason)
    await ctx.send('lol')

@bot.command() # repeat THIS COMMAND HAS BEEN REMOVED DUE TO PROBLEMS WITH LIMIT, THE BOT CAN FLOOD CHAD IF THE REPEAT NUMBER IS 100
async def repeat(ctx, times: int, content='repeating...'):
    for i in range(times):
        await ctx.send(content)

